{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["export default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}","export default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isNode = (typeof window === \"undefined\");\nUtils.isWeb = (typeof window !== \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof window === \"undefined\") && (typeof sparkscene !== \"undefined\");\n","export default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","export default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}","import SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","export default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}","export default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}","export default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}","import SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}","export default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}","import SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","import LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}","import FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}","import ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","import Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","import Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;","import FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}","export default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        return ((Utils.isNode ? source.constructor.name === \"WebGLTexture\" : source instanceof WebGLTexture));\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","import TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","import FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while(p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n        \n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n            \n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n            \n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]))\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100))\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while(j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while(j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while(i < n);\n                        break;\n                    }\n                } while(true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ]\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ]\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ]\n    }\n\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function(a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n}\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";","/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    return (index >= 0);\n                } else if (this._eventFunction[name] === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        // Because listener may detach itself while being invoked, we use a forEach instead of for loop.\n        listeners.forEach((listener) => {\n            listener(arg1, arg2, arg3);\n        });\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","import Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","export default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","import Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","import StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _draw() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        let paddingLeft = this._settings.paddingLeft * precision;\n        let paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this._context.measureText(this._settings.maxLinesSuffix).width : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this._context.measureText(lines[i]).width;\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            height = lineHeight * (lines.length - 1) + 0.5 * fontSize + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (cutSx || cutSy) {\n            this._context.translate(-cutSx, -cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = lines.length; i < n; i++) {\n            linePositionX = 0;\n            linePositionY = (i * lineHeight) + offsetY;\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (innerWidth - lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((innerWidth - lineWidths[i]) / 2);\n            }\n            linePositionX += paddingLeft;\n\n            drawLines.push({text: lines[i], x: linePositionX, y: linePositionY, w: lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n            this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (cutSx || cutSy) {\n            this._context.translate(cutSx, cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                let wordWidth = this._context.measureText(words[j]).width;\n                let wordWidthWithSpace = wordWidth + this._context.measureText(' ').width;\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth;\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            if (result) {\n                resultLines.push(result);\n                result = '';\n            }\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n    \n}","import Texture from \"../tree/Texture.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        return function(cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = new TextTextureRenderer(this.stage, canvas, args);\n            const p = renderer.draw();\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({renderInfo: renderer.renderInfo, throttle: false}, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({renderInfo: renderer.renderInfo, throttle: false}, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        }\n    }\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\n","import Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","import EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        let item = this._items[index];\n\n        if (item.ref) {\n            this._refs[item.ref] = undefined;\n        }\n\n        this._items.splice(index, 1);\n\n        this.onRemove(item, index);\n\n        return item;\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/**\n * Render tree node.\n * Copyright Metrological, 2017\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","export default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}","import Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc();\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc() {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template());\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f:f, a:context.store}\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`const ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`const ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`const ${propKey} = ${cursor}.enableTextTexture()`);\n                    this.parseTemplatePropRec(value, context, propKey);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`const ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n    \n    _construct() {\n    }\n\n    _build() {\n    }\n    \n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {}\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while(c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while(ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n\n}\n\nComponent.prototype.isComponent = true;\n","export default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","import CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}","\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","import CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}","\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","import CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","export default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('Error: Could not initialize shader.');\n            console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.log(this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.log(this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.log(\"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","import WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - (operation.index + 1) * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","import WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","export default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","import Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}","import CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}","import CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}","import CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","import Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","import C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","export default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                texture.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","import C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","export default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path);\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = \"http:\" + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        const t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};","import ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n * Copyright Metrological, 2017;\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                console.log('Using image worker!');\n                this._imageWorker = new ImageWorker();\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLCanvasElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0);\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n            if (!(src.substr(0,5) == \"data:\")) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n}\n\n","import WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}","class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name]) {\n                    if (!gl[name].name) {\n                        // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                        gl[name].xname = name;\n                    }\n                    gl['_' + name] = gl[name];\n                }\n                gl[name] = method;\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","import TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}","/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;","\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            const pixels = new Uint8Array(4);\n            const gl = this.stage.gl;\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","import StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","export default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","import Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","export default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","import StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","import EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n\n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}","export default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","import Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/**\n * Application render tree.\n * Copyright Metrological, 2017;\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                console.log('Using canvas2d renderer');\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            this._renderer = new WebGLRenderer(this);\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n    drawFrame() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n\n        this.emit('frameStart');\n\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n\n        this.emit('update');\n\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            console.log(`GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n            const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n            console.log(` Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","import Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n                if (this.__options.debug) {\n                    console.log('FOCUS ' + newFocusedComponent.getLocationString());\n                }\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        if (key) {\n            const hasTimer = this.__keypressTimers.has(key);\n            // prevent event from getting fired when the timeout is still active\n            if (path[path.length - 1].longpress && hasTimer) {\n                return;\n            }\n        }\n\n        if (key) {\n            if (!this.stage.application.focusTopDownEvent([`_capture${key}`, \"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([`_handle${key}`, \"_handleKey\"], obj);\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (key && consumer.longpress) {\n            this._startLongpressTimer(key, consumer);\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        if (key) {\n            if (!this.stage.application.focusTopDownEvent([`_capture${key}Release`, \"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([`_handle${key}Release`, \"_handleKeyRelease\"], obj);\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (key) {\n            if (this.__keypressTimers.has(key)) {\n                // keyup has fired before end of timeout so we clear it\n                clearTimeout(this.__keypressTimers.get(key));\n                // delete so we can register it again\n                this.__keypressTimers.delete(key);\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";","import Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","import Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n        img.src = url;\n    }\n\n}\n","import Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}","/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","import Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","import Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error(e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","import Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","import DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","import Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","import Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","import Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","import C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","import NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","import Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","import StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 1;\n    }\n\n    set radius(v) {\n        if (v < 1) {\n            v = 1;\n        }\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    \n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    #define PI 3.14159265359\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform float radius;\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(0.0, 1.0, d);\n    }\n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        float b = roundBox(vTextureCoord.xy * resolution - halfRes, halfRes, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","import DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    \n    constructor(context) {\n        super(context);\n        \n        this._x = 0;\n        this._y = 0;\n\n        this.color = 0xFFFF0000;\n\n        this._radiusX = 100;\n        this._radiusY = 100;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    set radiusX(v) {\n        this._radiusX = v;\n        this.redraw();\n    }\n\n    get radiusX() {\n        return this._radiusX;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this.radiusX = v;\n        this.radiusY = v;\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(v) {\n        if (this._color !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._rawColor = new Float32Array(col);\n\n            this.redraw();\n\n            this._color = v;\n        }\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        const rtc = operation.getNormalRenderTextureCoords(this._x, this._y);\n        this._setUniform(\"center\", new Float32Array(rtc), this.gl.uniform2fv);\n\n        this._setUniform(\"radius\", 2 * this._radiusX / operation.getRenderWidth(), this.gl.uniform1f);\n\n\n        // Radial gradient shader is expected to be used on a single element. That element's alpha is used.\n        this._setUniform(\"alpha\", operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        this._setUniform(\"color\", this._rawColor, this.gl.uniform4fv);\n        this._setUniform(\"aspectRatio\", (this._radiusX/this._radiusY) * operation.getRenderHeight()/operation.getRenderWidth(), this.gl.uniform1f);\n    }\n\n}\n\nRadialGradientShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform vec2 center;\n    uniform float aspectRatio;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy - center;\n        pos.y = pos.y * aspectRatio;\n    }\n`;\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 pos;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform vec4 color;\n    uniform float alpha;\n    void main(void){\n        float dist = length(pos);\n        gl_FragColor = mix(color * alpha, texture2D(uSampler, vTextureCoord) * vColor, min(1.0, dist / radius));\n    }\n`;\n\n","import DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","import Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;","import Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","import Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","[object Object]","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isNode","window","isWeb","isWPE","navigator","userAgent","isSpark","sparkscene","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","init","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","direction","f","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","loadError","has","add","delete","becomesUsed","becomesUnused","isResultTexture","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","nativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","replaceNativeTexture","core","_hasRenderUpdates","release","renderTextureReused","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","offsetY","_disableFuncY","setOriginalYWithoutUpdatingLayout","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","displayedTextureSource","textureSource","isRoot","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","outOfBounds","boundsMargin","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","getRenderTexture","setTexturizer","_stashTexCoords","_stashColors","_unstashColors","_unstashTexCoords","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","relX","relY","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","current","listeners","off","arg1","arg2","arg3","object","addAsMixin","cls","on","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","renderer","createShader","isShader","isValidShaderType","cleanup","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","ph","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","super","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","getNonDefaults","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","l","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","linePositionX","linePositionY","maxLineWidth","lineWidths","lineWidth","globalAlpha","fillRect","translate","drawLines","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","TextTexture","_text","_fontStyle","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_textOverflow","_lineHeight","_textBaseline","_textAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","toString","args","cloneArgs","getDrawingCanvas","draw","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","getRenderPrecision","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","first","last","addAt","currentIndex","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","o","createItem","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","filter","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","map","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","renderWidth","_getRenderWidth","renderHeight","_getRenderHeight","finalX","finalY","finalW","finalH","_enableTextureError","prevTexture","prevSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","setTextureCoords","getCornerPoints","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","reduce","acc","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","tagRoot","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","indent","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","disableFuncW","disableFuncH","colorTop","colorBottom","colorLeft","colorRight","setTags","_allowChildrenAccess","rect","rectangleTexture","enableTextTexture","isString","create","rtt","rttLazy","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transitions","transition","smooth","setSmooth","_transitions","finish","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","start","toLowerCase","isColorProperty","mergeColors","mergeNumbers","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","event","_hasMethod","_state","__path","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","__supportsSpread","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","pop","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","properties","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","key","childCursor","propKey","parseTemplatePropRec","isNumber","isBoolean","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","subs","hasChildren","getAt","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","gl","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","destroy","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glProgram","compiled","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","compile","initialized","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","tx","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","getWebGL","createTexture","texImage2D","RGBA","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texParams","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","test","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_imageWorker","_removeKeyHandler","loop","lp","drawFrame","requestAnimationFrame","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","props","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","_fillRenderState","pixels","Uint8Array","readPixels","_performRender","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","timingFunction","TransitionManager","progress","isRunning","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","0","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","rv","parse","prop","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","startLoop","stopLoop","_updatingFrame","getHrTime","fixedDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","freeUnusedRenderTextures","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","__options","38","40","37","39","13","8","27","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","debug","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","focusPath","events","_getMostSpecificHandledMember","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","canvasFactory","radius","strokeWidth","strokeColor","fillColor","getCanvasTexture","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","wrapper","_wrapper","NoiseTexture","noise","random","REPEAT","NEAREST","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","style","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","redraw","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","sel","_paddingX","_paddingY","_multiSpline","0.25","0.5","0.75","1","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","getSpline","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","renderPrecision","RadialGradientShader","_radiusX","_radiusY","radiusX","radiusY","_rawColor","rtc","getNormalRenderTextureCoords","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","RadialGradient","Light3d","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}